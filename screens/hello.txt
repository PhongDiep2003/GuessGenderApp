import React, { useEffect, useState } from 'react';
import { View, StyleSheet, Image, Text, TextInput, Button, Modal } from 'react-native';
import { Dimensions } from 'react-native';
import axios from 'axios';




function MainScreen(props) {
  const [isOpen, setIsOpen] = useState(false)
  const [name, setName] = useState('')
  const [country, setCountry] = useState('viet name')
  useEffect(() => {

    
    
    const axiosData = async () => {
      try {
        const baseUrlforCountryApi = 'https://restcountries.com/v3.1/'
        const countrySelected =  (country.toLowerCase() !== 'all') ? 
                                  'name/' + country.toLowerCase() + '?fullText=true' :
                                  'all'

        const urlforCountryApi = new URL(countrySelected, baseUrlforCountryApi)
        // console.log(urlforCountryApi)
        // const responseFromCountryAPI = await axios.get(urlforCountryApi.toString())
        // console.log(responseFromCountryAPI)
        const countryCode = axios.get(urlforCountryApi.toString)
                  .then((response) => {
                      return responseFromCountryAPI.data[0].cca2
                      
                    })
                  .catch((err) => {
                      console.log(err)
                      return ''
                    })
        console.log(countryCode)

        // const config = (countryCode) ? {
        //                                     name: name,
        //                                     country_id: countryCode
        //                                 } :
                                        
        //                                 {
        //                                     name: name

        //                                 }
        
        // const response = await axios.get('https://api.genderize.io', config);
        // console.log(response.data)
  
      }
      catch(err) {
        console.log(err)
      }
    }
    axiosData()
  },[isOpen])
  
  return (
    <View style={styles.container}>
      {/* background */}
      <Image source={require('../assets/background.jpg')} 
            resizeMode='stretch'
            style={styles.image} 
            clearButtonMode='always'/>
      
      <View style={styles.utilitiesContainer}>

      {/* search engine */}
      <View style={styles.nameContainer}>
          <TextInput style={styles.nameInput} 
                     placeholder='Name'
                     value={name}
                     onChangeText={(newText) => setName(newText)}/>
          <TextInput style={[styles.nameInput,{marginLeft:10}]}             
                            placeholder='Country' 
                            value={country} 
                            onChangeText={(newText) => setCountry(newText)}
                            clearButtonMode='always'
                            />

      </View>

      {/* button */}
      <Button title='Submit'  onPress={() => setIsOpen(true)} style={styles.buttonStyle}/>
      
      </View>

    <Modal visible={isOpen}
            animationType='fade'
            transparent={true}>

          <View style={styles.modalView}>

          </View>

    </Modal>
     

      
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    
  },
  image: {
    width: '100%',
    height: '100%'
  },
  nameContainer: {
    flexDirection: 'row',
    paddingHorizontal: 15,
    width: "100%",
    height: Dimensions.get('screen').height * 0.065,
    //backgroundColor:'red'

  },
  nameInput: {
    width: '50%',
    height: '100%',
    borderRadius: 10,
    borderColor:'black',
    borderWidth: 1 ,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
    fontSize: 24,
    fontWeight:'300',
    backgroundColor:'white',
    paddingLeft: 5
    

  },
  utilitiesContainer: {
    position: 'absolute',
    width: Dimensions.get('screen').width,
    height: Dimensions.get('screen').height,
    top: Dimensions.get('screen').height * 0.4,
    

  },
  modalView: {
    flex: 1,
    backgroundColor:'#f194ff'
  }
  

  
});

export default MainScreen;